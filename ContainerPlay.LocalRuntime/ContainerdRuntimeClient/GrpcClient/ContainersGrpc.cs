// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: containers.proto
// </auto-generated>
// Original file comments:
//
// Copyright The containerd Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Containerd.Services.Containers.V1 {
  /// <summary>
  /// Containers provides metadata storage for containers used in the execution
  /// service.
  ///
  /// The objects here provide an state-independent view of containers for use in
  /// management and resource pinning. From that perspective, containers do not
  /// have a "state" but rather this is the set of resources that will be
  /// considered in use by the container.
  ///
  /// From the perspective of the execution service, these objects represent the
  /// base parameters for creating a container process.
  ///
  /// In general, when looking to add fields for this type, first ask yourself
  /// whether or not the function of the field has to do with runtime execution or
  /// is invariant of the runtime state of the container. If it has to do with
  /// runtime, or changes as the "container" is started and stops, it probably
  /// doesn't belong on this object.
  /// </summary>
  public static partial class Containers
  {
    static readonly string __ServiceName = "containerd.services.containers.v1.Containers";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Containerd.Services.Containers.V1.GetContainerRequest> __Marshaller_containerd_services_containers_v1_GetContainerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Containerd.Services.Containers.V1.GetContainerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Containerd.Services.Containers.V1.GetContainerResponse> __Marshaller_containerd_services_containers_v1_GetContainerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Containerd.Services.Containers.V1.GetContainerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Containerd.Services.Containers.V1.ListContainersRequest> __Marshaller_containerd_services_containers_v1_ListContainersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Containerd.Services.Containers.V1.ListContainersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Containerd.Services.Containers.V1.ListContainersResponse> __Marshaller_containerd_services_containers_v1_ListContainersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Containerd.Services.Containers.V1.ListContainersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Containerd.Services.Containers.V1.ListContainerMessage> __Marshaller_containerd_services_containers_v1_ListContainerMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Containerd.Services.Containers.V1.ListContainerMessage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Containerd.Services.Containers.V1.CreateContainerRequest> __Marshaller_containerd_services_containers_v1_CreateContainerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Containerd.Services.Containers.V1.CreateContainerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Containerd.Services.Containers.V1.CreateContainerResponse> __Marshaller_containerd_services_containers_v1_CreateContainerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Containerd.Services.Containers.V1.CreateContainerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Containerd.Services.Containers.V1.UpdateContainerRequest> __Marshaller_containerd_services_containers_v1_UpdateContainerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Containerd.Services.Containers.V1.UpdateContainerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Containerd.Services.Containers.V1.UpdateContainerResponse> __Marshaller_containerd_services_containers_v1_UpdateContainerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Containerd.Services.Containers.V1.UpdateContainerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Containerd.Services.Containers.V1.DeleteContainerRequest> __Marshaller_containerd_services_containers_v1_DeleteContainerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Containerd.Services.Containers.V1.DeleteContainerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Containerd.Services.Containers.V1.GetContainerRequest, global::Containerd.Services.Containers.V1.GetContainerResponse> __Method_Get = new grpc::Method<global::Containerd.Services.Containers.V1.GetContainerRequest, global::Containerd.Services.Containers.V1.GetContainerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_containerd_services_containers_v1_GetContainerRequest,
        __Marshaller_containerd_services_containers_v1_GetContainerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Containerd.Services.Containers.V1.ListContainersRequest, global::Containerd.Services.Containers.V1.ListContainersResponse> __Method_List = new grpc::Method<global::Containerd.Services.Containers.V1.ListContainersRequest, global::Containerd.Services.Containers.V1.ListContainersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "List",
        __Marshaller_containerd_services_containers_v1_ListContainersRequest,
        __Marshaller_containerd_services_containers_v1_ListContainersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Containerd.Services.Containers.V1.ListContainersRequest, global::Containerd.Services.Containers.V1.ListContainerMessage> __Method_ListStream = new grpc::Method<global::Containerd.Services.Containers.V1.ListContainersRequest, global::Containerd.Services.Containers.V1.ListContainerMessage>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ListStream",
        __Marshaller_containerd_services_containers_v1_ListContainersRequest,
        __Marshaller_containerd_services_containers_v1_ListContainerMessage);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Containerd.Services.Containers.V1.CreateContainerRequest, global::Containerd.Services.Containers.V1.CreateContainerResponse> __Method_Create = new grpc::Method<global::Containerd.Services.Containers.V1.CreateContainerRequest, global::Containerd.Services.Containers.V1.CreateContainerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_containerd_services_containers_v1_CreateContainerRequest,
        __Marshaller_containerd_services_containers_v1_CreateContainerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Containerd.Services.Containers.V1.UpdateContainerRequest, global::Containerd.Services.Containers.V1.UpdateContainerResponse> __Method_Update = new grpc::Method<global::Containerd.Services.Containers.V1.UpdateContainerRequest, global::Containerd.Services.Containers.V1.UpdateContainerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_containerd_services_containers_v1_UpdateContainerRequest,
        __Marshaller_containerd_services_containers_v1_UpdateContainerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Containerd.Services.Containers.V1.DeleteContainerRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Delete = new grpc::Method<global::Containerd.Services.Containers.V1.DeleteContainerRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_containerd_services_containers_v1_DeleteContainerRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Containerd.Services.Containers.V1.ContainersReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Containers</summary>
    [grpc::BindServiceMethod(typeof(Containers), "BindService")]
    public abstract partial class ContainersBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Containerd.Services.Containers.V1.GetContainerResponse> Get(global::Containerd.Services.Containers.V1.GetContainerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Containerd.Services.Containers.V1.ListContainersResponse> List(global::Containerd.Services.Containers.V1.ListContainersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task ListStream(global::Containerd.Services.Containers.V1.ListContainersRequest request, grpc::IServerStreamWriter<global::Containerd.Services.Containers.V1.ListContainerMessage> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Containerd.Services.Containers.V1.CreateContainerResponse> Create(global::Containerd.Services.Containers.V1.CreateContainerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Containerd.Services.Containers.V1.UpdateContainerResponse> Update(global::Containerd.Services.Containers.V1.UpdateContainerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> Delete(global::Containerd.Services.Containers.V1.DeleteContainerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Containers</summary>
    public partial class ContainersClient : grpc::ClientBase<ContainersClient>
    {
      /// <summary>Creates a new client for Containers</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ContainersClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Containers that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ContainersClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ContainersClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ContainersClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Containerd.Services.Containers.V1.GetContainerResponse Get(global::Containerd.Services.Containers.V1.GetContainerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Get(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Containerd.Services.Containers.V1.GetContainerResponse Get(global::Containerd.Services.Containers.V1.GetContainerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Get, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Containerd.Services.Containers.V1.GetContainerResponse> GetAsync(global::Containerd.Services.Containers.V1.GetContainerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Containerd.Services.Containers.V1.GetContainerResponse> GetAsync(global::Containerd.Services.Containers.V1.GetContainerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Get, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Containerd.Services.Containers.V1.ListContainersResponse List(global::Containerd.Services.Containers.V1.ListContainersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return List(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Containerd.Services.Containers.V1.ListContainersResponse List(global::Containerd.Services.Containers.V1.ListContainersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_List, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Containerd.Services.Containers.V1.ListContainersResponse> ListAsync(global::Containerd.Services.Containers.V1.ListContainersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Containerd.Services.Containers.V1.ListContainersResponse> ListAsync(global::Containerd.Services.Containers.V1.ListContainersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_List, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Containerd.Services.Containers.V1.ListContainerMessage> ListStream(global::Containerd.Services.Containers.V1.ListContainersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListStream(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Containerd.Services.Containers.V1.ListContainerMessage> ListStream(global::Containerd.Services.Containers.V1.ListContainersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ListStream, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Containerd.Services.Containers.V1.CreateContainerResponse Create(global::Containerd.Services.Containers.V1.CreateContainerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Create(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Containerd.Services.Containers.V1.CreateContainerResponse Create(global::Containerd.Services.Containers.V1.CreateContainerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Create, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Containerd.Services.Containers.V1.CreateContainerResponse> CreateAsync(global::Containerd.Services.Containers.V1.CreateContainerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Containerd.Services.Containers.V1.CreateContainerResponse> CreateAsync(global::Containerd.Services.Containers.V1.CreateContainerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Create, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Containerd.Services.Containers.V1.UpdateContainerResponse Update(global::Containerd.Services.Containers.V1.UpdateContainerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Containerd.Services.Containers.V1.UpdateContainerResponse Update(global::Containerd.Services.Containers.V1.UpdateContainerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Containerd.Services.Containers.V1.UpdateContainerResponse> UpdateAsync(global::Containerd.Services.Containers.V1.UpdateContainerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Containerd.Services.Containers.V1.UpdateContainerResponse> UpdateAsync(global::Containerd.Services.Containers.V1.UpdateContainerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Delete(global::Containerd.Services.Containers.V1.DeleteContainerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Delete(global::Containerd.Services.Containers.V1.DeleteContainerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delete, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAsync(global::Containerd.Services.Containers.V1.DeleteContainerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAsync(global::Containerd.Services.Containers.V1.DeleteContainerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delete, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ContainersClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ContainersClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ContainersBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Get, serviceImpl.Get)
          .AddMethod(__Method_List, serviceImpl.List)
          .AddMethod(__Method_ListStream, serviceImpl.ListStream)
          .AddMethod(__Method_Create, serviceImpl.Create)
          .AddMethod(__Method_Update, serviceImpl.Update)
          .AddMethod(__Method_Delete, serviceImpl.Delete).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ContainersBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Get, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Containerd.Services.Containers.V1.GetContainerRequest, global::Containerd.Services.Containers.V1.GetContainerResponse>(serviceImpl.Get));
      serviceBinder.AddMethod(__Method_List, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Containerd.Services.Containers.V1.ListContainersRequest, global::Containerd.Services.Containers.V1.ListContainersResponse>(serviceImpl.List));
      serviceBinder.AddMethod(__Method_ListStream, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Containerd.Services.Containers.V1.ListContainersRequest, global::Containerd.Services.Containers.V1.ListContainerMessage>(serviceImpl.ListStream));
      serviceBinder.AddMethod(__Method_Create, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Containerd.Services.Containers.V1.CreateContainerRequest, global::Containerd.Services.Containers.V1.CreateContainerResponse>(serviceImpl.Create));
      serviceBinder.AddMethod(__Method_Update, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Containerd.Services.Containers.V1.UpdateContainerRequest, global::Containerd.Services.Containers.V1.UpdateContainerResponse>(serviceImpl.Update));
      serviceBinder.AddMethod(__Method_Delete, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Containerd.Services.Containers.V1.DeleteContainerRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.Delete));
    }

  }
}
#endregion
